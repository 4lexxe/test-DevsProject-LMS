import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { DollarSign, Percent, Clock, Tag } from 'lucide-react';
export default function PricingCard({ pricing }) {
    if (!pricing) {
        return null;
    }
    const formatDate = (dateString) => {
        return new Date(dateString).toLocaleDateString('es-ES', {
            day: 'numeric',
            month: 'short',
            year: 'numeric'
        });
    };
    return (_jsxs("div", { className: "bg-white border border-gray-200 rounded-lg p-6 shadow-sm", children: [_jsxs("div", { className: "text-center mb-6", children: [_jsx("h3", { className: "text-lg font-semibold text-gray-900 mb-6", children: "Precio del Curso" }), _jsx("div", { className: "mb-4", children: pricing.isFree ? (_jsx("div", { className: "flex items-center justify-center gap-2", children: _jsx("span", { className: "text-4xl font-bold text-green-600", children: "GRATIS" }) })) : pricing.hasDiscount ? (_jsxs("div", { className: "space-y-2", children: [_jsx("div", { className: "flex items-center justify-center gap-2", children: _jsxs("span", { className: "text-2xl line-through text-gray-400", children: ["$", pricing.originalPrice.toFixed(2)] }) }), _jsxs("div", { className: "flex items-center justify-center gap-2", children: [_jsx(DollarSign, { className: "w-6 h-6 text-green-500" }), _jsxs("span", { className: "text-4xl font-bold text-green-600", children: ["$", pricing.finalPrice.toFixed(2)] })] })] })) : (_jsxs("div", { className: "flex items-center justify-center gap-2", children: [_jsx(DollarSign, { className: "w-6 h-6 text-green-500" }), _jsxs("span", { className: "text-4xl font-bold text-green-600", children: ["$", pricing.finalPrice.toFixed(2)] })] })) }), pricing.hasDiscount && pricing.totalDiscountPercentage > 0 && (_jsxs("div", { className: "inline-flex items-center gap-1 px-4 py-2 bg-gradient-to-r from-red-500 to-red-600 text-white rounded-full text-sm font-bold shadow-lg mb-4", children: [_jsx(Percent, { className: "w-4 h-4" }), _jsxs("span", { children: [pricing.totalDiscountPercentage, "% OFF"] })] })), !pricing.isFree && pricing.savings > 0 && (_jsxs("p", { className: "text-green-600 font-semibold text-lg", children: ["\u00A1Ahorras $", pricing.savings.toFixed(2), "!"] }))] }), pricing.hasDiscount && pricing.discountEvents && pricing.discountEvents.length > 0 && (_jsxs("div", { className: "border-t border-gray-200 pt-4", children: [_jsxs("div", { className: "flex items-center gap-2 mb-3", children: [_jsx(Tag, { className: "w-4 h-4 text-orange-500" }), _jsx("h4", { className: "text-sm font-semibold text-gray-700", children: pricing.discountEvents.length === 1 ? 'PromociÃ³n Activa' : 'Promociones Activas' })] }), _jsx("div", { className: "space-y-3", children: pricing.discountEvents
                            .filter(discount => discount.isActive)
                            .map((discount) => (_jsxs("div", { className: "bg-gradient-to-r from-orange-50 to-red-50 border border-orange-200 rounded-lg p-3", children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsx("h5", { className: "font-semibold text-gray-800 text-sm", children: discount.event }), _jsxs("span", { className: "bg-orange-500 text-white px-2 py-1 rounded-full text-xs font-bold", children: [discount.value, "% OFF"] })] }), discount.description && (_jsx("p", { className: "text-gray-600 text-xs mb-2", children: discount.description })), _jsxs("div", { className: "flex items-center gap-1 text-xs text-gray-500", children: [_jsx(Clock, { className: "w-3 h-3" }), _jsxs("span", { children: ["V\u00E1lido hasta ", formatDate(discount.endDate)] })] })] }, discount.id))) }), pricing.discountEvents.filter(d => d.isActive).length > 1 && (_jsx("div", { className: "mt-3 p-2 bg-green-50 border border-green-200 rounded text-center", children: _jsxs("p", { className: "text-xs text-green-700 flex items-center justify-center gap-1", children: [_jsx("span", { children: "\u2728" }), _jsx("span", { children: "Descuentos combinados autom\u00E1ticamente" })] }) }))] }))] }));
}
